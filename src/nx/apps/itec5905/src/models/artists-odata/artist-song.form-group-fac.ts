/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IArtistSongForm } from './artist-song.form';
import { IArtistForm } from './artist.form';
import { ArtistFormGroupFac } from './artist.form-group-fac';
import { ISongForm } from './song.form';
import { SongFormGroupFac } from './song.form-group-fac';

export function ArtistSongFormGroupFac(): FormGroup<IArtistSongForm> {
  return new FormGroup<IArtistSongForm>({
    id: new FormControl<string | null | undefined>(null),
    artistId: new FormControl<string>('', { validators: Validators.required, nonNullable: true } ),
    songId: new FormControl<string>('', { validators: Validators.required, nonNullable: true } ),
    createdBy: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.minLength(1)]), nonNullable: true }),
    updatedBy: new FormControl<string | null | undefined>(null),
    createdOnUtc: new FormControl<Date | null | undefined>(null),
    updatedOnUtc: new FormControl<Date | null | undefined>(null),
    updateCount: new FormControl<number | null | undefined>(null),
    artist: new FormGroup<IArtistForm>(ArtistFormGroupFac().controls),
    song: new FormGroup<ISongForm>(SongFormGroupFac().controls),
  });
}
