/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICustomerForm } from './customer.form';
import { ICustomerFavoriteArtistForm } from './customer-favorite-artist.form';
import { ICustomerFavoriteGenreForm } from './customer-favorite-genre.form';
import { ICustomerPurchaseForm } from './customer-purchase.form';

export function CustomerFormGroupFac(): FormGroup<ICustomerForm> {
  return new FormGroup<ICustomerForm>({
    id: new FormControl<string | null | undefined>(null),
    name: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(255)]), nonNullable: true }),
    email: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.email, Validators.minLength(2), Validators.maxLength(255)]), nonNullable: true }),
    createdBy: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.minLength(1)]), nonNullable: true }),
    updatedBy: new FormControl<string | null | undefined>(null),
    createdOnUtc: new FormControl<Date | null | undefined>(null),
    updatedOnUtc: new FormControl<Date | null | undefined>(null),
    updateCount: new FormControl<number | null | undefined>(null),
    favoriteArtists: new FormArray<FormGroup<ICustomerFavoriteArtistForm>>([]),
    favoriteGenres: new FormArray<FormGroup<ICustomerFavoriteGenreForm>>([]),
    purchases: new FormArray<FormGroup<ICustomerPurchaseForm>>([]),
  });
}
